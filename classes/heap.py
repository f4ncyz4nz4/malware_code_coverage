# classes/Heap.py

class Heap:
    index = 1

    def __init__(self,  start, end):
        self.name = "heap" + str(Heap.index)
        self.start = start
        self.size = end-start
        self.end = end
        self.instr_disass = 0
        self.instr_exec = 0
        self.ratio = 0.0
        Heap.index += 1

    def __str__(self):
        return f"Heap: {self.name}\nStart: {hex(self.start)}\nSize: {hex(self.size)}\nEnd: {hex(self.end)}\n"

    def __dict__(self):
        return {
            "name": self.name,
            "start": hex(self.start),
            "size": hex(self.size),
            "end": hex(self.end),
            "instr_exec": self.instr_exec,
            "instr_disass": self.instr_disass,
            "ratio": self.ratio
        }

    def contains(self, address):
        if address >= self.start and address <= self.end:
            return True
        return False
