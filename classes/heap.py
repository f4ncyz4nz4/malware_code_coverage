class Heap:
    index = 1

    def __init__(self,  start, end, start_file, size_file):
        self.name = "heap" + str(Heap.index)
        self.start = start
        self.size = end - start
        self.end = end
        self.start_file = start_file
        self.size_file = size_file
        self.instr_tot = 0
        self.instr_exe = 0
        self.instr_cov = 0.0
        self.size_cov = 0.0
        self.instr_list = []
        Heap.index += 1

    def __str__(self):
        return f"Heap: {self.name}\nStart: {hex(self.start)}\nSize: {hex(self.size)}\nEnd: {hex(self.end)}\n"

    def __dict__(self):
        return {
            "name": self.name,
            "start": hex(self.start),
            "size": hex(self.size),
            "end": hex(self.end),
            # "start_file": hex(self.start_file),
            # "size_file": hex(self.size_file),
            "instr_exe": self.instr_exe,
            "instr_tot": self.instr_tot,
            "instr_cov": self.instr_cov,
            "size_cov": self.size_cov
        }

    def contains(self, address):
        if address >= self.start and address <= self.end:
            return True
        return False
